{"version":3,"sources":["NameCell.js","UsernameCell.js","EmailCell.js","AddressCell.js","PhoneCell.js","WebsiteCell.js","CompanyCell.js","App.js","index.js"],"names":["NameCell","props","useState","user","name","setName","editModeEnabled","setEditModeEnabled","style","display","type","value","onChange","e","target","className","onClick","saveEdited","id","marginLeft","UsernameCell","username","setUsername","EmailCell","email","setEmail","AddressCell","address","street","suite","city","zipcode","geo","lat","lng","PhoneCell","phone","setPhone","WebsiteCell","website","setWebsite","href","CompanyCell","company","App","users","setUsers","userId","updatedUser","updatedUsers","map","axios","method","url","then","response","data","length","scope","key","columnName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9350973c.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction NameCell(props) {\n    const [name, setName] = useState(props.user.name);\n    const [editModeEnabled, setEditModeEnabled] = useState(false);\n\n    const onEditButtonClick = () => {\n        setName(props.user.name);\n        setEditModeEnabled(true);\n    };\n\n    const onCancelButtonClick = () => {\n        setEditModeEnabled(false);\n    };\n\n    const onSaveButtonClick = () => {\n        props.saveEdited(props.user.id, {...props.user, name: name});\n        setEditModeEnabled(false);\n    };\n\n    return (\n        <td>\n            {\n                (!editModeEnabled)\n                    ?\n                    <div style={{display: \"flex\"}}>\n                        {props.user.name}\n                        <button className=\"btn btn-sm float-right\"\n                                style={{marginLeft: \"auto\"}}\n                                onClick={onEditButtonClick}>\n                            <i className=\"fa fa-pencil\"/>\n                        </button>\n                    </div>\n                    :\n                    <div style={{display: \"flex\"}}>\n                        <input type=\"text\"\n                               value={name}\n                               onChange={e => setName(e.target.value)}/>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onCancelButtonClick}>\n                            <i className=\"fa fa-times\"/>\n                        </button>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onSaveButtonClick}>\n                            <i className=\"fa fa-check\"/>\n                        </button>\n                    </div>\n            }\n        </td>\n    );\n}\n\nexport default NameCell;\n","import React, {useState} from 'react';\n\nfunction UsernameCell(props) {\n    const [username, setUsername] = useState(props.user.username);\n    const [editModeEnabled, setEditModeEnabled] = useState(false);\n\n    const onEditButtonClick = () => {\n        setUsername(props.user.username);\n        setEditModeEnabled(true);\n    };\n\n    const onCancelButtonClick = () => {\n        setEditModeEnabled(false);\n    };\n\n    const onSaveButtonClick = () => {\n        props.saveEdited(props.user.id, {...props.user, username: username});\n        setEditModeEnabled(false);\n    };\n\n    return (\n        <td>\n            {\n                (!editModeEnabled)\n                    ?\n                    <div style={{display: \"flex\"}}>\n                        {props.user.username}\n                        <button className=\"btn btn-sm float-right\"\n                                style={{marginLeft: \"auto\"}}\n                                onClick={onEditButtonClick}>\n                            <i className=\"fa fa-pencil\"/>\n                        </button>\n                    </div>\n                    :\n                    <div style={{display: \"flex\"}}>\n                        <input type=\"text\"\n                               value={username}\n                               onChange={e => setUsername(e.target.value)}/>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onCancelButtonClick}>\n                            <i className=\"fa fa-times\"/>\n                        </button>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onSaveButtonClick}>\n                            <i className=\"fa fa-check\"/>\n                        </button>\n                    </div>\n            }\n        </td>\n    );\n}\n\nexport default UsernameCell;\n","import React, {useState} from 'react';\n\nfunction EmailCell(props) {\n    const [email, setEmail] = useState(props.user.email);\n    const [editModeEnabled, setEditModeEnabled] = useState(false);\n\n    const onEditButtonClick = () => {\n        setEmail(props.user.email);\n        setEditModeEnabled(true);\n    };\n\n    const onCancelButtonClick = () => {\n        setEditModeEnabled(false);\n    };\n\n    const onSaveButtonClick = () => {\n        props.saveEdited(props.user.id, {...props.user, email: email});\n        setEditModeEnabled(false);\n    };\n\n    return (\n        <td>\n            {\n                (!editModeEnabled)\n                    ?\n                    <div style={{ display: \"flex\" }}>\n                        {props.user.email}\n                        <button className=\"btn btn-sm float-right\"\n                                style={{ marginLeft: \"auto\" }}\n                                onClick={onEditButtonClick}>\n                            <i className=\"fa fa-pencil\"/>\n                        </button>\n                    </div>\n                    :\n                    <div style={{ display: \"flex\" }}>\n                        <input type=\"text\"\n                               value={email}\n                               onChange={e => setEmail(e.target.value)}/>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onCancelButtonClick}>\n                            <i className=\"fa fa-times\"/>\n                        </button>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onSaveButtonClick}>\n                            <i className=\"fa fa-check\"/>\n                        </button>\n                    </div>\n            }\n        </td>\n    );\n}\n\nexport default EmailCell;\n","import React from 'react';\n\nfunction AddressCell(props) {\n    return (\n        <td>\n            <div>Street: {props.user.address.street}</div>\n            <div>Suite: {props.user.address.suite}</div>\n            <div>City: {props.user.address.city}</div>\n            <div>Zipcode: {props.user.address.zipcode}</div>\n            <div>Geo: {props.user.address.geo.lat}, {props.user.address.geo.lng}</div>\n        </td>\n    );\n}\n\nexport default AddressCell;\n","import React, {useState} from 'react';\n\nfunction PhoneCell(props) {\n    const [phone, setPhone] = useState(props.user.phone);\n    const [editModeEnabled, setEditModeEnabled] = useState(false);\n\n    const onEditButtonClick = () => {\n        setPhone(props.user.phone);\n        setEditModeEnabled(true);\n    };\n\n    const onCancelButtonClick = () => {\n        setEditModeEnabled(false);\n    };\n\n    const onSaveButtonClick = () => {\n        props.saveEdited(props.user.id, {...props.user, phone: phone});\n        setEditModeEnabled(false);\n    };\n\n    return (\n        <td>\n            {\n                (!editModeEnabled)\n                    ?\n                    <div style={{ display: \"flex\" }}>\n                        {props.user.phone}\n                        <button className=\"btn btn-sm float-right\"\n                                style={{ marginLeft: \"auto\" }}\n                                onClick={onEditButtonClick}>\n                            <i className=\"fa fa-pencil\"/>\n                        </button>\n                    </div>\n                    :\n                    <div style={{ display: \"flex\" }}>\n                        <input type=\"text\"\n                               value={phone}\n                               onChange={e => setPhone(e.target.value)}/>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onCancelButtonClick}>\n                            <i className=\"fa fa-times\"/>\n                        </button>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onSaveButtonClick}>\n                            <i className=\"fa fa-check\"/>\n                        </button>\n                    </div>\n            }\n        </td>\n    );\n}\n\nexport default PhoneCell;\n","import React, {useState} from 'react';\n\nfunction WebsiteCell(props) {\n    const [website, setWebsite] = useState(props.user.website);\n    const [editModeEnabled, setEditModeEnabled] = useState(false);\n\n    const onEditButtonClick = () => {\n        setWebsite(props.user.website);\n        setEditModeEnabled(true);\n    };\n\n    const onCancelButtonClick = () => {\n        setEditModeEnabled(false);\n    };\n\n    const onSaveButtonClick = () => {\n        props.saveEdited(props.user.id, {...props.user, website: website});\n        setEditModeEnabled(false);\n    };\n\n    return (\n        <td>\n            {\n                (!editModeEnabled)\n                    ?\n                    <div style={{ display: \"flex\" }}>\n                        <a href={props.user.website}>{props.user.website}</a>\n                        <button className=\"btn btn-sm float-right\"\n                                style={{ marginLeft: \"auto\" }}\n                                onClick={onEditButtonClick}>\n                            <i className=\"fa fa-pencil\"/>\n                        </button>\n                    </div>\n                    :\n                    <div style={{ display: \"flex\" }}>\n                        <input type=\"text\"\n                               value={website}\n                               onChange={e => setWebsite(e.target.value)}/>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onCancelButtonClick}>\n                            <i className=\"fa fa-times\"/>\n                        </button>\n                        <button className=\"btn btn-sm float-right\"\n                                onClick={onSaveButtonClick}>\n                            <i className=\"fa fa-check\"/>\n                        </button>\n                    </div>\n            }\n        </td>\n    );\n}\n\nexport default WebsiteCell;\n","import React from 'react';\n\nfunction CompanyCell(props) {\n    return (\n        <td>\n            <div>{props.user.company.name}</div>\n        </td>\n    );\n}\n\nexport default CompanyCell;\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport NameCell from \"./NameCell\";\nimport UsernameCell from \"./UsernameCell\";\nimport EmailCell from \"./EmailCell\";\nimport AddressCell from \"./AddressCell\";\nimport PhoneCell from \"./PhoneCell\";\nimport WebsiteCell from \"./WebsiteCell\";\nimport CompanyCell from \"./CompanyCell\";\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n\n    const loadUsers = () => {\n        /*fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json => {\n                setUsers(json);\n            })*/\n\n        axios({\n            method: 'get',\n            url: 'https://jsonplaceholder.typicode.com/users',\n        })\n            .then((response) => {\n                setUsers(response.data);\n            });\n    };\n\n    const saveEdited = (userId, updatedUser) => {\n        const updatedUsers = users.map(user => {\n            if (user.id === userId) {\n                return updatedUser\n            } else\n                return user;\n        });\n        setUsers(updatedUsers);\n    };\n\n    return (\n        <div className=\"container\">\n            <h2>Users</h2>\n\n            <button className=\"btn btn-primary mb-3\"\n                    onClick={loadUsers}>\n                Load Users\n            </button>\n\n            <table className=\"table table-bordered\">\n                {\n                    users.length !== 0 &&\n                    <thead className=\"thead-light\">\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Username</th>\n                        <th scope=\"col\">email</th>\n                        <th scope=\"col\">Address</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Website</th>\n                        <th scope=\"col\">Company</th>\n                    </tr>\n                    </thead>\n                }\n\n                <tbody>\n                {\n                    users.map(user =>\n                        <tr key={user.id}>\n                            <td>{user.id}</td>\n                            <NameCell columnName=\"name\"\n                                      user={user}\n                                      saveEdited={saveEdited}/>\n                            <UsernameCell columnName=\"username\"\n                                          user={user}\n                                          saveEdited={saveEdited}/>\n                            <EmailCell columnName=\"email\"\n                                       user={user}\n                                       saveEdited={saveEdited}/>\n                            <AddressCell columnName=\"address\"\n                                         user={user}\n                                         saveEdited={saveEdited}/>\n                            <PhoneCell columnName=\"phone\"\n                                       user={user}\n                                       saveEdited={saveEdited}/>\n                            <WebsiteCell columnName=\"website\"\n                                         user={user}\n                                         saveEdited={saveEdited}/>\n                            <CompanyCell columnName=\"company\"\n                                         user={user}\n                                         saveEdited={saveEdited}/>\n                        </tr>\n                    )\n                }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\n\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);"],"sourceRoot":""}